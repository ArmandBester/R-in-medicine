head(HIV_mort)
# Remove the ranges in brackets and convert the values to intigers
HIV_mort <- HIV_mort %>%
na_if("No data") %>%
mutate(Deaths_2017 = str_replace_all(Deaths_2017, "\\[.*?\\]", ""),
Deaths_2010 = str_replace_all(Deaths_2010, "\\[.*?\\]", ""),
Deaths_2005 = str_replace_all(Deaths_2005, "\\[.*?\\]", ""),
Deaths_2000 = str_replace_all(Deaths_2000, "\\[.*?\\]", ""),
Deaths_2017 = str_replace_all(Deaths_2017, "<", ""),
Deaths_2010 = str_replace_all(Deaths_2010, "<", ""),
Deaths_2005 = str_replace_all(Deaths_2005, "<", ""),
Deaths_2000 = str_replace_all(Deaths_2000, "<", ""),
Deaths_2017 = str_replace_all(Deaths_2017, " ", ""),
Deaths_2010 = str_replace_all(Deaths_2010, " ", ""),
Deaths_2005 = str_replace_all(Deaths_2005, " ", ""),
Deaths_2000 = str_replace_all(Deaths_2000, " ", ""),
Deaths_2017 = as.double(Deaths_2017),
Deaths_2010 = as.double(Deaths_2010),
Deaths_2005 = as.double(Deaths_2005),
Deaths_2000 = as.double(Deaths_2000))
# select only the countries we need
HIV_mort <- HIV_mort[HIV_mort$Country %in% ssa.list, ]
head(HIV_mort)
summary(HIV_mort)
HIV_mort <- HIV_mort %>%
mutate(min = apply(HIV_mort[, 2:4], 1, FUN = min)) %>%
mutate(max  = apply(HIV_mort[, 2:4], 1, FUN = max)) %>%
mutate(Change = max - min)
HIV_mort %>%
top_n(10, wt = Change) %>%
gather(Year, Deaths, Deaths_2017:Deaths_2000) %>%
na.omit() %>%
separate(Year, c("D", "Year"), sep = "_", convert = TRUE) %>% # I should be able to use NA rather than D, but get an error
ggplot(aes(x = Year, y = Deaths, color = Country))+
geom_line()+
geom_vline(xintercept = 2004, color = "black", linetype  = "dotted")+
theme_bw()+
theme(legend.position = "bottom")
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(rgdal)
# load the HIV data
HIV_rate_2016 <- read_csv("HIV rates.csv", col_names = TRUE)
library(maptools)
#read in the shape file
africa.shp <- readShapeSpatial("Africa_SHP/Africa.shp")
library(sf)
#read in the shape file
africa.shp <- readShapeSpatial("Africa_SHP/Africa.shp")
#read in the shape file
africa.shp <- readShapeSpatial("Africa_SHP/Africa.shp") %>%
fortify(africa.shp, region = "COUNTRY")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(maptools)
ARV_cov.df <- read_csv("ARV cov 2017.csv", col_names = TRUE)
# A list of Sub-Saharan countries
ssa.list <- (read_csv("Sub-Saharan.txt", col_names = FALSE)[["X1"]])
head(ARV_cov.df)
# rename the variables
colnames(ARV_cov.df) <- c("Country", "PersCov", "NumberOnARV", "NumberInfected")
# Remove the ranges in brackets and convert the values to intigers
ARV_cov.df <- ARV_cov.df %>%
na_if("No data") %>%
mutate(PersCov = str_replace_all(PersCov, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "<", ""),
NumberInfected = str_replace_all(NumberInfected, " ", ""),
PersCov = as.double(PersCov),
NumberOnARV = as.double(NumberOnARV),
NumberInfected = as.double(NumberInfected))
# select only the countries we need
ARV_cov.df <- ARV_cov.df[ARV_cov.df$Country %in% ssa.list, ]
head(ARV_cov.df)
ARV_cov.df %>%
na.omit(PersCov) %>%
ggplot(aes(x = reorder(Country, PersCov), y = PersCov, fill = log10(NumberInfected)))+
scale_fill_viridis(name = "Log10 number infected")+
geom_col()+
coord_flip()+
ylab("% ARV coverage") + xlab("Country")+
theme_bw()
ARV_cov.df %>%
filter(NumberInfected >= max(ARV_cov.df$NumberInfected, na.rm = TRUE)) %>%
kable(format = "html", caption = "Country with the highest HIV infection") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
HIV_mort <- read_csv("HIV deaths.csv", col_names = TRUE)
head(HIV_mort)
# Remove the ranges in brackets and convert the values to intigers
HIV_mort <- HIV_mort %>%
na_if("No data") %>%
mutate(Deaths_2017 = str_replace_all(Deaths_2017, "\\[.*?\\]", ""),
Deaths_2010 = str_replace_all(Deaths_2010, "\\[.*?\\]", ""),
Deaths_2005 = str_replace_all(Deaths_2005, "\\[.*?\\]", ""),
Deaths_2000 = str_replace_all(Deaths_2000, "\\[.*?\\]", ""),
Deaths_2017 = str_replace_all(Deaths_2017, "<", ""),
Deaths_2010 = str_replace_all(Deaths_2010, "<", ""),
Deaths_2005 = str_replace_all(Deaths_2005, "<", ""),
Deaths_2000 = str_replace_all(Deaths_2000, "<", ""),
Deaths_2017 = str_replace_all(Deaths_2017, " ", ""),
Deaths_2010 = str_replace_all(Deaths_2010, " ", ""),
Deaths_2005 = str_replace_all(Deaths_2005, " ", ""),
Deaths_2000 = str_replace_all(Deaths_2000, " ", ""),
Deaths_2017 = as.double(Deaths_2017),
Deaths_2010 = as.double(Deaths_2010),
Deaths_2005 = as.double(Deaths_2005),
Deaths_2000 = as.double(Deaths_2000))
# select only the countries we need
HIV_mort <- HIV_mort[HIV_mort$Country %in% ssa.list, ]
head(HIV_mort)
summary(HIV_mort)
HIV_mort <- HIV_mort %>%
mutate(min = apply(HIV_mort[, 2:4], 1, FUN = min)) %>%
mutate(max  = apply(HIV_mort[, 2:4], 1, FUN = max)) %>%
mutate(Change = max - min)
HIV_mort %>%
top_n(10, wt = Change) %>%
gather(Year, Deaths, Deaths_2017:Deaths_2000) %>%
na.omit() %>%
separate(Year, c("D", "Year"), sep = "_", convert = TRUE) %>% # I should be able to use NA rather than D, but get an error
ggplot(aes(x = Year, y = Deaths, color = Country))+
geom_line()+
geom_vline(xintercept = 2004, color = "black", linetype  = "dotted")+
theme_bw()+
theme(legend.position = "bottom")
# load the HIV data
HIV_rate_2016 <- read_csv("HIV rates.csv", col_names = TRUE)
#read in the shape file
africa <- readShapeSpatial("Africa_SHP/Africa.shp") %>%
fortify(africa.shp, region = "COUNTRY")
# load the HIV data
HIV_rate_2016 <- read_csv("HIV rates.csv", col_names = TRUE)
#read in the shape file
africa <- readShapeSpatial("Africa_SHP/Africa.shp") %>%
fortify(africa.shp, region = "COUNTRY") %>%
merge(HIV_rate_2016, by.x = "id", by.y = "Country", all.x=TRUE)
View(africa)
#read in the shape file
africa <- readShapeSpatial("Africa_SHP/Africa.shp") %>%
fortify(africa.shp, region = "COUNTRY") %>%
merge(HIV_rate_2016, by.x = "id", by.y = "Country", all.x=TRUE) %>%
order(order)
#read in the shape file
africa <- readShapeSpatial("Africa_SHP/Africa.shp") %>%
fortify(africa.shp, region = "COUNTRY") %>%
merge(HIV_rate_2016, by.x = "id", by.y = "Country", all.x=TRUE) %>%
arrange(order)
library(RColorBrewer)
# load the HIV data
HIV_rate_2016 <- read_csv("HIV rates.csv", col_names = TRUE)
#read in the shape file
africa <- readShapeSpatial("Africa_SHP/Africa.shp") %>%
fortify(africa.shp, region = "COUNTRY") %>%
merge(HIV_rate_2016, by.x = "id", by.y = "Country", all.x=TRUE) %>%
arrange(order) %>%
ggplot()+
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = final.plot$Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "")+
theme(panel.background = element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank())
# load the HIV data
HIV_rate_2016 <- read_csv("HIV rates.csv", col_names = TRUE)
#read in the shape file
africa <- readShapeSpatial("Africa_SHP/Africa.shp") %>%
fortify(africa.shp, region = "COUNTRY") %>%
merge(HIV_rate_2016, by.x = "id", by.y = "Country", all.x=TRUE) %>%
arrange(order) %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = final.plot$Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "")+
theme(panel.background = element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank())
# load the HIV data
HIV_rate_2016 <- read_csv("HIV rates.csv", col_names = TRUE)
#read in the shape file
africa <- readShapeSpatial("Africa_SHP/Africa.shp") %>%
fortify(africa.shp, region = "COUNTRY") %>%
merge(HIV_rate_2016, by.x = "id", by.y = "Country", all.x=TRUE) %>%
arrange(order)
africa %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = final.plot$Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "")+
theme(panel.background = element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank())
africa %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "")+
theme(panel.background = element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank())
africa %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "")+
theme(panel.background = element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank(),
legend.title = "$ HIV infection rate")
africa %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "")+
theme(panel.background = element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank(),
legend.title = element_text("% HIV infection rate"))
africa %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "")
africa %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "") +
theme(panel.background = element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank())
africa %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "") +
theme(panel.background = element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank())+
labs(fill = "% HIV infection rate")
africa %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "% HIV infection rate") +
theme(panel.background = element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(maptools)
library(RColorBrewer)
ARV_cov.df <- read_csv("ARV cov 2017.csv", col_names = TRUE)
# A list of Sub-Saharan countries
ssa.list <- (read_csv("Sub-Saharan.txt", col_names = FALSE)[["X1"]])
head(ARV_cov.df)
# rename the variables
colnames(ARV_cov.df) <- c("Country", "PersCov", "NumberOnARV", "NumberInfected")
# Remove the ranges in brackets and convert the values to intigers
ARV_cov.df <- ARV_cov.df %>%
na_if("No data") %>%
mutate(PersCov = str_replace_all(PersCov, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "<", ""),
NumberInfected = str_replace_all(NumberInfected, " ", ""),
PersCov = as.double(PersCov),
NumberOnARV = as.double(NumberOnARV),
NumberInfected = as.double(NumberInfected))
# select only the countries we need
ARV_cov.df <- ARV_cov.df[ARV_cov.df$Country %in% ssa.list, ]
head(ARV_cov.df)
ARV_cov.df %>%
na.omit(PersCov) %>%
ggplot(aes(x = reorder(Country, PersCov), y = PersCov, fill = log10(NumberInfected)))+
scale_fill_viridis(name = "Log10 number infected")+
geom_col()+
coord_flip()+
ylab("% ARV coverage") + xlab("Country")+
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(maptools)
library(RColorBrewer)
ARV_cov.df <- read_csv("ARV cov 2017.csv", col_names = TRUE)
# A list of Sub-Saharan countries
ssa.list <- (read_csv("Sub-Saharan.txt", col_names = FALSE)[["X1"]])
head(ARV_cov.df)
# rename the variables
colnames(ARV_cov.df) <- c("Country", "PersCov", "NumberOnARV", "NumberInfected")
# Remove the ranges in brackets and convert the values to intigers
ARV_cov.df <- ARV_cov.df %>%
na_if("No data") %>%
mutate(PersCov = str_replace_all(PersCov, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "<", ""),
NumberInfected = str_replace_all(NumberInfected, " ", ""),
PersCov = as.double(PersCov),
NumberOnARV = as.double(NumberOnARV),
NumberInfected = as.double(NumberInfected))
# select only the countries we need
ARV_cov.df <- ARV_cov.df[ARV_cov.df$Country %in% ssa.list, ]
head(ARV_cov.df)
ARV_cov.df %>%
na.omit(PersCov) %>%
ggplot(aes(x = reorder(Country, PersCov), y = PersCov, fill = log10(NumberInfected)))+
scale_fill_viridis(name = "Log10 number infected")+
geom_col()+
coord_flip()+
ylab("% ARV coverage") + xlab("Country")+
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(maptools)
library(RColorBrewer)
ARV_cov.df <- read_csv("ARV cov 2017.csv", col_names = TRUE)
# A list of Sub-Saharan countries
ssa.list <- (read_csv("Sub-Saharan.txt", col_names = FALSE)[["X1"]])
head(ARV_cov.df)
# rename the variables
colnames(ARV_cov.df) <- c("Country", "PersCov", "NumberOnARV", "NumberInfected")
# Remove the ranges in brackets and convert the values to intigers
ARV_cov.df <- ARV_cov.df %>%
na_if("No data") %>%
mutate(PersCov = str_replace_all(PersCov, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "<", ""),
NumberInfected = str_replace_all(NumberInfected, " ", ""),
PersCov = as.double(PersCov),
NumberOnARV = as.double(NumberOnARV),
NumberInfected = as.double(NumberInfected))
# select only the countries we need
ARV_cov.df <- ARV_cov.df[ARV_cov.df$Country %in% ssa.list, ]
head(ARV_cov.df)
ARV_cov.df %>%
na.omit(PersCov) %>%
ggplot(aes(x = reorder(Country, PersCov), y = PersCov, fill = log10(NumberInfected)))+
scale_fill_viridis(name = "Log10 number infected")+
geom_col()+
coord_flip()+
ylab("% ARV coverage") + xlab("Country")+
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(maptools)
library(RColorBrewer)
ARV_cov.df <- read_csv("ARV cov 2017.csv", col_names = TRUE)
# A list of Sub-Saharan countries
ssa.list <- (read_csv("Sub-Saharan.txt", col_names = FALSE)[["X1"]])
head(ARV_cov.df)
# rename the variables
colnames(ARV_cov.df) <- c("Country", "PersCov", "NumberOnARV", "NumberInfected")
# Remove the ranges in brackets and convert the values to intigers
ARV_cov.df <- ARV_cov.df %>%
na_if("No data") %>%
mutate(PersCov = str_replace_all(PersCov, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "<", ""),
NumberInfected = str_replace_all(NumberInfected, " ", ""),
PersCov = as.double(PersCov),
NumberOnARV = as.double(NumberOnARV),
NumberInfected = as.double(NumberInfected))
# select only the countries we need
ARV_cov.df <- ARV_cov.df[ARV_cov.df$Country %in% ssa.list, ]
head(ARV_cov.df)
ARV_cov.df %>%
na.omit(PersCov) %>%
ggplot(aes(x = reorder(Country, PersCov), y = PersCov, fill = log10(NumberInfected)))+
scale_fill_viridis(name = "Log10 number infected")+
geom_col()+
coord_flip()+
ylab("% ARV coverage") + xlab("Country")+
theme_bw()
library(viridis)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(maptools)
library(viridis)
library(RColorBrewer)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(readr)
library(stringr)
library(tidyr)
library(ggplot2)
library(knitr)
library(kableExtra)
library(maptools)
library(viridis)
library(RColorBrewer)
ARV_cov.df <- read_csv("ARV cov 2017.csv", col_names = TRUE)
# A list of Sub-Saharan countries
ssa.list <- (read_csv("Sub-Saharan.txt", col_names = FALSE)[["X1"]])
head(ARV_cov.df)
# rename the variables
colnames(ARV_cov.df) <- c("Country", "PersCov", "NumberOnARV", "NumberInfected")
# Remove the ranges in brackets and convert the values to intigers
ARV_cov.df <- ARV_cov.df %>%
na_if("No data") %>%
mutate(PersCov = str_replace_all(PersCov, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "\\[.*?\\]", ""),
NumberInfected = str_replace_all(NumberInfected, "<", ""),
NumberInfected = str_replace_all(NumberInfected, " ", ""),
PersCov = as.double(PersCov),
NumberOnARV = as.double(NumberOnARV),
NumberInfected = as.double(NumberInfected))
# select only the countries we need
ARV_cov.df <- ARV_cov.df[ARV_cov.df$Country %in% ssa.list, ]
head(ARV_cov.df)
ARV_cov.df %>%
na.omit(PersCov) %>%
ggplot(aes(x = reorder(Country, PersCov), y = PersCov, fill = log10(NumberInfected)))+
scale_fill_viridis(name = "Log10 number infected")+
geom_col()+
coord_flip()+
ylab("% ARV coverage") + xlab("Country")+
theme_bw()
ARV_cov.df %>%
filter(NumberInfected >= max(ARV_cov.df$NumberInfected, na.rm = TRUE)) %>%
kable(format = "html", caption = "Country with the highest HIV infection") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
HIV_mort <- read_csv("HIV deaths.csv", col_names = TRUE)
head(HIV_mort)
# Remove the ranges in brackets and convert the values to intigers
HIV_mort <- HIV_mort %>%
na_if("No data") %>%
mutate(Deaths_2017 = str_replace_all(Deaths_2017, "\\[.*?\\]", ""),
Deaths_2010 = str_replace_all(Deaths_2010, "\\[.*?\\]", ""),
Deaths_2005 = str_replace_all(Deaths_2005, "\\[.*?\\]", ""),
Deaths_2000 = str_replace_all(Deaths_2000, "\\[.*?\\]", ""),
Deaths_2017 = str_replace_all(Deaths_2017, "<", ""),
Deaths_2010 = str_replace_all(Deaths_2010, "<", ""),
Deaths_2005 = str_replace_all(Deaths_2005, "<", ""),
Deaths_2000 = str_replace_all(Deaths_2000, "<", ""),
Deaths_2017 = str_replace_all(Deaths_2017, " ", ""),
Deaths_2010 = str_replace_all(Deaths_2010, " ", ""),
Deaths_2005 = str_replace_all(Deaths_2005, " ", ""),
Deaths_2000 = str_replace_all(Deaths_2000, " ", ""),
Deaths_2017 = as.double(Deaths_2017),
Deaths_2010 = as.double(Deaths_2010),
Deaths_2005 = as.double(Deaths_2005),
Deaths_2000 = as.double(Deaths_2000))
# select only the countries we need
HIV_mort <- HIV_mort[HIV_mort$Country %in% ssa.list, ]
head(HIV_mort)
summary(HIV_mort)
HIV_mort <- HIV_mort %>%
mutate(min = apply(HIV_mort[, 2:4], 1, FUN = min)) %>%
mutate(max  = apply(HIV_mort[, 2:4], 1, FUN = max)) %>%
mutate(Change = max - min)
HIV_mort %>%
top_n(10, wt = Change) %>%
gather(Year, Deaths, Deaths_2017:Deaths_2000) %>%
na.omit() %>%
separate(Year, c("D", "Year"), sep = "_", convert = TRUE) %>% # I should be able to use NA rather than D, but get an error
ggplot(aes(x = Year, y = Deaths, color = Country))+
geom_line()+
geom_vline(xintercept = 2004, color = "black", linetype  = "dotted")+
theme_bw()+
theme(legend.position = "bottom")
# load the HIV data
HIV_rate_2016 <- read_csv("HIV rates.csv", col_names = TRUE)
#read in the shape file
africa <- readShapeSpatial("Africa_SHP/Africa.shp") %>%
fortify(africa.shp, region = "COUNTRY") %>%
merge(HIV_rate_2016, by.x = "id", by.y = "Country", all.x=TRUE) %>%
arrange(order)
africa %>%
ggplot()+
geom_polygon(aes(x = long, y = lat, group = group, fill = Rate),
color = "black", size = 0.2)+
coord_map()+
scale_fill_distiller(palette = "Greens", direction = 1, name = "% HIV infection rate") +
theme(panel.background = element_blank(), axis.text = element_blank(),
axis.title = element_blank(), axis.ticks = element_blank())
